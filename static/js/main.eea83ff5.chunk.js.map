{"version":3,"sources":["components/products.js","store/categories.js","components/categories.js","components/header.js","components/footer.js","store/cart.js","components/cart.js","App.js","store/index.js","index.js"],"names":["connect","state","categories","props","Container","maxWidth","component","products","map","product","idx","category","activeCategory","Grid","item","xs","sm","md","Card","CardHeader","title","name","titleTypographyProps","align","CardContent","Typography","variant","color","price","inStock","CardActions","Button","initialState","displayName","description","mapDispatchToProps","activate","type","payload","onClick","key","cart","Link","className","count","Footer","id","remove","add","App","CssBaseline","reducers","combineReducers","action","newState","filter","store","createStore","composeWithDevTools","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eea83ff5.chunk.js","sourcesContent":["/* eslint-disable array-callback-return */\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n\n// MATERIAL UI\n\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\n\n\n\nconst Products = props => {\n    return (\n        < Container maxWidth=\"md\" component=\"main\" >\n            {props.categories.products.map((product, idx) => {\n                if (product.category === props.categories.activeCategory) {\n                    return (\n                        < Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <Card>\n\n                                    <CardHeader title={product.name}\n                                        titleTypographyProps={{ align: 'center' }}\n                                    />\n                                    <CardContent>\n                                        <Typography variant=\"h5\" color=\"textPrimary\">\n                                            Category: {product.category}\n                                        </Typography>\n                                        <Typography variant=\"h5\" color=\"textPrimary\">\n                                            Price: {product.price}$\n                                </Typography>\n                                        <Typography variant=\"h5\" color=\"textPrimary\">\n                                            inStock: {product.inStock}\n                                        </Typography>\n\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button variant='outlined' color=\"primary\">ADD TO CART</Button>\n                                        <Button variant='outlined' color=\"primary\">VIEW DETAILS</Button>\n\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n\n\n                        </Grid>\n                    )\n                }\n\n            })}\n        </Container >\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    categories: state.categories\n});\n\nexport default connect(mapStateToProps)(Products);\n\n\n\n\n// BEFORE MATERIAL UI\n\n// const Products = props => {\n//     return (\n\n\n\n//         props.categories.products.map((product, idx) => {\n//             if (product.category === props.categories.activeCategory) {\n//                 return (\n\n//                     <div key={idx} className=\"container\">\n//                         <h4>{product.name}</h4>\n//                         <p>{product.category}</p>\n//                         <p>{product.price}</p>\n//                         <p>{product.inStock}</p>\n//                         <a href='!#' >ADD TO CART</a>\n//                         <a href='!#' >VIEW DETAILS</a>\n//                     </div>\n//                 )\n//             }\n\n//         })\n\n\n//     )\n// }","let initialState = {\n    categories: [\n        { name: 'electronics', displayName: 'Elecronics', description: 'electronics' },\n        { name: 'food', displayName: 'Food', description: 'food' },\n        { name: 'clothing', displayName: 'Clothing', description: 'clothing' },\n    ],\n    products: [\n        { name: 'TV', category: 'electronics', price: 699.00, inStock: 5 },\n        { name: 'Radio', category: 'electronics', price: 99.00, inStock: 15 },\n        { name: 'Shirt', category: 'clothing', price: 9.00, inStock: 25 },\n        { name: 'Socks', category: 'clothing', price: 12.00, inStock: 10 },\n        { name: 'Apples', category: 'food', price: .99, inStock: 500 },\n        { name: 'Eggs', category: 'food', price: 1.99, inStock: 12 },\n        { name: 'Bread', category: 'food', price: 2.39, inStock: 90 },\n    ],\n    activeCategory: 'food'\n};\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n    switch (type) {\n        case 'ACTIVATE':\n            state.activeCategory = payload;\n            return { categories: state.categories, products: state.products, activeCategory: state.activeCategory }\n        default:\n            return state;\n\n    }\n}\n\n\nexport const activate = (name) => {\n    return {\n        type: 'ACTIVATE',\n        payload: name\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { activate } from '../store/categories';\n\nconst Categories = props => {\n    return (\n        <section>\n            <ul>\n                {props.categories.categories.map(category =>\n                    <li onClick={() => props.activate(category.name)} key={category.name}> {category.displayName} </li>\n                )}\n            </ul>\n        </section>\n    )\n}\n\nconst mapStateToProps = state => ({\n    categories: state.categories,\n});\n\nconst mapDispatchToProps = { activate };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from '@material-ui/core';\n\n\n\nconst Header = props => {\n    return (\n        <>\n            <header>\n                <h1>OUR STORE</h1>\n                <Link className=\"a\" color=\"primary\" >\n                    CART ({props.cart.count})\n                </Link>\n            </header>\n        </>\n    );\n}\n\nconst mapStateToProps = state => ({\n    cart: state.cart\n});\n\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\n\nfunction Footer() {\n    return (\n        <>\n            <footer id=\"footer\">\n                <h2>&copy; codeFellows</h2>\n            </footer>\n        </>\n    );\n}\n\nexport default Footer;","let initialState = {\n    products: [],\n    count: 0\n}\n\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n\n    switch (type) {\n        case 'ADD':\n            return {\n                products: [...state.products, payload],\n                count: state.count + 1\n            }\n\n        case 'REMOVE':\n            let newState = { ...state };\n            let products = newState.products.filter(product => {\n                if (payload !== product) {\n                    return product;\n                }\n            })\n            return {\n                products: products,\n                count: state.count - 1\n            }\n\n        default:\n            return state;\n    }\n\n}\n\nexport const add = (name) => {\n    return {\n        type: 'Add',\n        payload: name\n    }\n}\n\nexport const remove = (name) => {\n    return {\n        type: 'REMOVE',\n        payload: name\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { Link } from '@material-ui/core';\nimport { remove } from '../store/cart'\n\n\n\nconst Cart = props => {\n    return (\n        <div className='cart'>\n            {props.cart.products.map((product, idx) =>\n                <div key={idx}>\n                    <Link className=\"a\" color=\"primary\" onClick={() => props.add(product)} >\n                        {product}\n                    </Link>\n                    <Button onClick={() => props.remove(product)} >x</Button>\n                </div>\n\n            )}\n        </div>\n\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    cart: state.cart\n});\nconst mapDispatchToProps = { remove };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import React from 'react';\nimport './App.scss';\n\nimport Products from './components/products';\nimport Categories from './components/categories.js';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport SimpleCart from './components/cart';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline>\n        <Header />\n        <SimpleCart />\n        <Categories />\n        <Products />\n        <Footer />\n      </CssBaseline>\n    </>\n  );\n}\n\nexport default App;","import { combineReducers, createStore } from 'redux';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nimport categories from './categories';\nimport cart from './cart';\n\n\nlet reducers = combineReducers({ categories, cart });\n\n\nconst store = () => {\n    return createStore(reducers, composeWithDevTools());\n}\n\nexport default store();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store/index'\n\n\nfunction Main() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  )\n};\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n"],"sourceRoot":""}